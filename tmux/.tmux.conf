set -g default-shell /usr/bin/zsh
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
setw -g mode-keys vi
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -g mouse on
set -s focus-events on

set -g prefix2 C-a                        # GNU-Screen compatible prefix
bind C-a send-prefix -2

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 100000               # boost history

# edit configuration
bind e new-window -n "$HOME/.tmux.conf" "nvim ~/configs/tmux/.tmux.conf"

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'


# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

set -g default-terminal "xterm-256color"

# Window title string (uses statusbar variables)
set -g set-titles-string '#I #T'

# Status bar with load and time
set -g status-bg '#4e4e4e'
set -g status-fg '#ffffff'
set -g status-left '#[bg=#bbbbbb]#[fg=#000000]#(echo " ")#(hostname)#(echo " ")'
set -g status-right '#[bg=#bbbbbb]#[fg=#000000]#(echo " eth0 ")#(hostname -I | cut -d " " -f 1)#(echo " ")'
set-window-option -g window-status-format ' #[fg=white,bold]#I #W '
set-window-option -g window-status-current-format '#[bg=red] #[fg=white,bold]#I #W '

# clear both screen and history
bind -n C-w send-keys C-l

# activity
set -g monitor-activity on
set -g visual-activity on

# -- navigation ----------------------------------------------------------------

# create session
bind C-s new-session
bind C-c kill-session

# find session
bind f command-prompt -p find-session 'switch-client -t %%'

# pane navigation
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind . swap-pane -D       # swap current pane with the next one
bind , swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

bind -n M-h split-window -h -c "#{pane_current_path}"
bind -n M-j previous-window
bind -n M-k next-window
bind -n M-l new-window -c "#{pane_current_path}"
bind Tab last-window        # move to last active window

# -- copy mode -----------------------------------------------------------------
unbind -T copy-mode MouseDragEnd1Pane
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "xclip -in -selection clipboard"
unbind -T copy-mode-vi Space #Default for begin-selection
unbind -T copy-mode-vi Enter #Default for copy-selection
bind Enter copy-mode # enter copy mode
bind -T copy-mode-vi Space send -X cancel
bind -T copy-mode-vi Escape send -X clear-selection
bind -T copy-mode-vi H send-keys -X start-of-line
bind -T copy-mode-vi L send-keys -X end-of-line
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard 2>&1"

# -- buffers -------------------------------------------------------------------

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from
bind-key -n Home send Escape "OH"
bind-key -n End send Escape "OF"
